{
  "version": 3,
  "sources": ["../../src/services/adapterService.ts"],
  "sourcesContent": ["import { ZendureSolarflow } from \"../main\";\r\nimport { setSocToZero } from \"./calculationService\";\r\nimport { setOutputLimit } from \"./mqttService\";\r\n\r\n/* eslint-disable @typescript-eslint/indent */\r\n\r\nexport const updateSolarFlowState = async (\r\n  adapter: ZendureSolarflow,\r\n  productKey: string,\r\n  deviceKey: string,\r\n  state: string,\r\n  val: number | string | boolean\r\n): Promise<void> => {\r\n  await adapter?.setState(`${productKey}.${deviceKey}.${state}`, val, true);\r\n};\r\n\r\nexport const updateSolarFlowControlState = async (\r\n  adapter: ZendureSolarflow,\r\n  productKey: string,\r\n  deviceKey: string,\r\n  state: string,\r\n  val: number | string | boolean\r\n): Promise<void> => {\r\n  await adapter?.setState(\r\n    `${productKey}.${deviceKey}.control.${state}`,\r\n    val,\r\n    true\r\n  );\r\n};\r\n\r\nexport const checkVoltage = async (\r\n  adapter: ZendureSolarflow,\r\n  productKey: string,\r\n  deviceKey: string,\r\n  voltage: number\r\n): Promise<void> => {\r\n  if (voltage < 46.1) {\r\n    if (adapter.config.useCalculation) {\r\n      setSocToZero(adapter, productKey, deviceKey);\r\n    }\r\n\r\n    if (adapter.config.useLowVoltageBlock) {\r\n      // Activate Low Voltage Block\r\n      await adapter?.setState(\r\n        `${productKey}.${deviceKey}.control.lowVoltageBlock`,\r\n        true,\r\n        true\r\n      );\r\n\r\n      // Low Voltage Block activated, stop power input immediately\r\n      setOutputLimit(adapter, productKey, deviceKey, 0);\r\n    }\r\n  } else if (voltage >= 47.5) {\r\n    if (adapter.config.useLowVoltageBlock) {\r\n      // Deactivate Low Voltage Block\r\n      await adapter?.setState(\r\n        `${productKey}.${deviceKey}.control.lowVoltageBlock`,\r\n        false,\r\n        true\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport const checkDevicesServer = async (\r\n  adapter: ZendureSolarflow\r\n): Promise<void> => {\r\n  const channels = await adapter.getChannelsAsync();\r\n\r\n  channels.forEach(async (channel) => {\r\n    if (channel._id) {\r\n      const splitted = channel._id.split(\".\");\r\n      if (splitted.length == 4) {\r\n        const productKey = splitted[2];\r\n        const deviceKey = splitted[3];\r\n\r\n        const currentServerState = await adapter.getStateAsync(\r\n          `${productKey}.${deviceKey}.registeredServer`\r\n        );\r\n\r\n        if (\r\n          currentServerState &&\r\n          currentServerState.val &&\r\n          currentServerState.val != adapter.config.server\r\n        ) {\r\n          adapter.log.warn(\r\n            `Device with ProductKey '${productKey}' and DeviceKey '${deviceKey}' was configured on server '${currentServerState.val}', but adapter is configured to use server '${adapter.config.server}'! No data will be available!`\r\n          );\r\n        }\r\n      }\r\n    }\r\n  });\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gCAA6B;AAC7B,yBAA+B;AAIxB,MAAM,uBAAuB,OAClC,SACA,YACA,WACA,OACA,QACkB;AAClB,SAAM,mCAAS,SAAS,GAAG,UAAU,IAAI,SAAS,IAAI,KAAK,IAAI,KAAK;AACtE;AAEO,MAAM,8BAA8B,OACzC,SACA,YACA,WACA,OACA,QACkB;AAClB,SAAM,mCAAS;AAAA,IACb,GAAG,UAAU,IAAI,SAAS,YAAY,KAAK;AAAA,IAC3C;AAAA,IACA;AAAA;AAEJ;AAEO,MAAM,eAAe,OAC1B,SACA,YACA,WACA,YACkB;AAClB,MAAI,UAAU,MAAM;AAClB,QAAI,QAAQ,OAAO,gBAAgB;AACjC,kDAAa,SAAS,YAAY,SAAS;AAAA,IAC7C;AAEA,QAAI,QAAQ,OAAO,oBAAoB;AAErC,aAAM,mCAAS;AAAA,QACb,GAAG,UAAU,IAAI,SAAS;AAAA,QAC1B;AAAA,QACA;AAAA;AAIF,6CAAe,SAAS,YAAY,WAAW,CAAC;AAAA,IAClD;AAAA,EACF,WAAW,WAAW,MAAM;AAC1B,QAAI,QAAQ,OAAO,oBAAoB;AAErC,aAAM,mCAAS;AAAA,QACb,GAAG,UAAU,IAAI,SAAS;AAAA,QAC1B;AAAA,QACA;AAAA;AAAA,IAEJ;AAAA,EACF;AACF;AAEO,MAAM,qBAAqB,OAChC,YACkB;AAClB,QAAM,WAAW,MAAM,QAAQ,iBAAiB;AAEhD,WAAS,QAAQ,OAAO,YAAY;AAClC,QAAI,QAAQ,KAAK;AACf,YAAM,WAAW,QAAQ,IAAI,MAAM,GAAG;AACtC,UAAI,SAAS,UAAU,GAAG;AACxB,cAAM,aAAa,SAAS,CAAC;AAC7B,cAAM,YAAY,SAAS,CAAC;AAE5B,cAAM,qBAAqB,MAAM,QAAQ;AAAA,UACvC,GAAG,UAAU,IAAI,SAAS;AAAA,QAC5B;AAEA,YACE,sBACA,mBAAmB,OACnB,mBAAmB,OAAO,QAAQ,OAAO,QACzC;AACA,kBAAQ,IAAI;AAAA,YACV,2BAA2B,UAAU,oBAAoB,SAAS,+BAA+B,mBAAmB,GAAG,+CAA+C,QAAQ,OAAO,MAAM;AAAA,UAC7L;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AACH;",
  "names": []
}
