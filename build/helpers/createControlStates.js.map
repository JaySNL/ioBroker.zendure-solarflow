{
  "version": 3,
  "sources": ["../../src/helpers/createControlStates.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/indent */\r\n\r\nimport { ac2400ControlStates } from \"../constants/ac2400ControlStates\";\r\nimport { aceControlStates } from \"../constants/aceControlStates\";\r\nimport { aioControlStates } from \"../constants/aioControlStates\";\r\nimport { hubControlStates } from \"../constants/hubControlStates\";\r\nimport { hyperControlStates } from \"../constants/hyperControlStates\";\r\nimport { solarflow800ControlStates } from \"../constants/solarflow800ControlStates\";\r\nimport { solarflow800ProControlStates } from \"../constants/solarflow800ProControlStates\";\r\nimport { ZendureSolarflow } from \"../main\";\r\nimport { ISolarflowState } from \"../models/ISolarflowState\";\r\n\r\nexport const getControlStateDefinition = (\r\n  productName: string\r\n): ISolarflowState[] => {\r\n  switch (productName.toLocaleLowerCase()) {\r\n    case \"hyper 2000\":\r\n      return hyperControlStates;\r\n    case \"solarflow 800\":\r\n      return solarflow800ControlStates;\r\n    case \"solarflow2.0\":\r\n      return hubControlStates;\r\n    case \"solarflow hub 2000\":\r\n      return hubControlStates;\r\n    case \"solarflow aio zy\":\r\n      return aioControlStates;\r\n    case \"ace 1500\":\r\n      return aceControlStates;\r\n    case \"solarflow 800 pro\":\r\n      return solarflow800ProControlStates;\r\n    case \"solarflow 2400 ac\":\r\n      return ac2400ControlStates;\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nexport const createControlStates = async (\r\n  adapter: ZendureSolarflow,\r\n  productKey: string,\r\n  deviceKey: string,\r\n  productName: string\r\n): Promise<void> => {\r\n  // Create control folder\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.control`, {\r\n    type: \"channel\",\r\n    common: {\r\n      name: {\r\n        de: \"Steuerung f\u00FCr Ger\u00E4t \" + deviceKey,\r\n        en: \"Control for device \" + deviceKey,\r\n      },\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  const controlStateDefinitions = getControlStateDefinition(productName);\r\n\r\n  controlStateDefinitions.forEach(async (state: ISolarflowState) => {\r\n    await adapter?.extendObject(\r\n      `${productKey}.${deviceKey}.control.${state.title}`,\r\n      {\r\n        type: \"state\",\r\n        common: {\r\n          name: {\r\n            de: state.nameDe,\r\n            en: state.nameEn,\r\n          },\r\n          type: state.type,\r\n          desc: state.title,\r\n          role: state.role,\r\n          read: true,\r\n          write: false,\r\n          unit: state.unit,\r\n          states: state.states,\r\n        },\r\n        native: {},\r\n      }\r\n    );\r\n\r\n    // Subscribe to state\r\n    adapter?.subscribeStates(\r\n      `${productKey}.${deviceKey}.control.${state.title}`\r\n    );\r\n  });\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,iCAAoC;AACpC,8BAAiC;AACjC,8BAAiC;AACjC,8BAAiC;AACjC,gCAAmC;AACnC,uCAA0C;AAC1C,0CAA6C;AAItC,MAAM,4BAA4B,CACvC,gBACsB;AACtB,UAAQ,YAAY,kBAAkB,GAAG;AAAA,IACvC,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT,KAAK;AACH,aAAO;AAAA,IACT;AACE,aAAO,CAAC;AAAA,EACZ;AACF;AAEO,MAAM,sBAAsB,OACjC,SACA,YACA,WACA,gBACkB;AAElB,SAAM,mCAAS,aAAa,GAAG,UAAU,IAAI,SAAS,YAAY;AAAA,IAChE,MAAM;AAAA,IACN,QAAQ;AAAA,MACN,MAAM;AAAA,QACJ,IAAI,+BAAyB;AAAA,QAC7B,IAAI,wBAAwB;AAAA,MAC9B;AAAA,IACF;AAAA,IACA,QAAQ,CAAC;AAAA,EACX;AAEA,QAAM,0BAA0B,0BAA0B,WAAW;AAErE,0BAAwB,QAAQ,OAAO,UAA2B;AAChE,WAAM,mCAAS;AAAA,MACb,GAAG,UAAU,IAAI,SAAS,YAAY,MAAM,KAAK;AAAA,MACjD;AAAA,QACE,MAAM;AAAA,QACN,QAAQ;AAAA,UACN,MAAM;AAAA,YACJ,IAAI,MAAM;AAAA,YACV,IAAI,MAAM;AAAA,UACZ;AAAA,UACA,MAAM,MAAM;AAAA,UACZ,MAAM,MAAM;AAAA,UACZ,MAAM,MAAM;AAAA,UACZ,MAAM;AAAA,UACN,OAAO;AAAA,UACP,MAAM,MAAM;AAAA,UACZ,QAAQ,MAAM;AAAA,QAChB;AAAA,QACA,QAAQ,CAAC;AAAA,MACX;AAAA;AAIF,uCAAS;AAAA,MACP,GAAG,UAAU,IAAI,SAAS,YAAY,MAAM,KAAK;AAAA;AAAA,EAErD,CAAC;AACH;",
  "names": []
}
